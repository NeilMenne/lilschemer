(load "src/part1.scm")
(in-test-group
  Chapter1
  (define-test (lists-are-not-atoms)
    (define l (list 1 2 3))
    (assert-false (atom? l) "Lists are not atoms")
  )
  (define-test (numbers-are-atoms)
    (assert-true (atom? 3) "Integer numbers are atoms")
    (assert-true (atom? 3.5) "Decimal numbers are atoms")
    (assert-true (atom? 2/3) "Fractional numbers are atoms")
  )
  (define-test (strings-are-atoms)
    (assert-true (atom? "test") "Strings are atoms")
  )
  (define-test (symbols-are-atoms)
    (assert-true (atom? 'a) "Arbitrary symbols are atoms")
  )
)

(in-test-group
  Chapter2
  (define-test (list-of-atoms)
    (define l '(1 2 3))
    (assert-true (lat? l) "List is only composed of atoms")
  )
  (define-test (list-of-not-just-atoms)
    (define l '(1 2 '(3 4)))
    (assert-false (lat? l) "Lists that aren't only atoms return false")
  )
  (define-test (member-of-list)
    (define l '(3 2 1))
    (assert-true (member? 1 l) "x is a member of l")
  )
)
